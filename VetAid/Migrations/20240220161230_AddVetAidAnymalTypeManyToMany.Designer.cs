// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using VetAid.Data;

#nullable disable

namespace VetAid.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240220161230_AddVetAidAnymalTypeManyToMany")]
    partial class AddVetAidAnymalTypeManyToMany
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("VetAid.Data.Entities.AnimalTypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("AnimalTypes", (string)null);
                });

            modelBuilder.Entity("VetAid.Data.Entities.VetAidEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<TimeSpan>("Duretion")
                        .HasColumnType("interval");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<string>("ServiceType")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("VetAids", (string)null);
                });

            modelBuilder.Entity("VetAidAnimalType", b =>
                {
                    b.Property<int>("VetAidId")
                        .HasColumnType("integer");

                    b.Property<int>("AnimalTypeId")
                        .HasColumnType("integer");

                    b.HasKey("VetAidId", "AnimalTypeId");

                    b.HasIndex("AnimalTypeId");

                    b.ToTable("VetAidAnimalType", (string)null);
                });

            modelBuilder.Entity("VetAidAnimalType", b =>
                {
                    b.HasOne("VetAid.Data.Entities.VetAidEntity", null)
                        .WithMany()
                        .HasForeignKey("AnimalTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VetAid.Data.Entities.AnimalTypeEntity", null)
                        .WithMany()
                        .HasForeignKey("VetAidId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
